Vagrant.configure("2") do |config|
  config.vm.box = "archman/linuxmint-mate"
  config.vm.box_version = "21"
  
  config.vm.box_check_update = false
  config.vm.synced_folder ".", "/vagrant", disabled: true
  
  config.ssh.username = 'vagrant'
  config.ssh.password = 'vagrant'
  config.ssh.insert_key = false
  config.vm.provider "virtualbox" do |vb|
        vb.name = "dev_java_v5"
        vb.customize ["modifyvm", :id, "--accelerate3d", "on"]
        # TODO: speed up 3d: sudo apt-get install compizconfig-settings-manager && ccsm
        # TODO: after starting ccsm enable opengl+composite
        vb.customize ["modifyvm", :id, "--accelerate2dvideo", "off"]
        vb.customize ["modifyvm", :id, "--graphicscontroller", "vmsvga"]
        vb.customize ["modifyvm", :id, "--vram", "128"]
        vb.customize ["modifyvm", :id, "--monitorcount", "2"]
        vb.customize ["modifyvm", :id, "--memory", "8000"]
        vb.customize ["modifyvm", :id, "--cpus", "6"]
        vb.customize ["modifyvm", :id, "--ioapic", "on"]
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
        #vb.customize ["storagectl", :id, "--name", "SATA", "--hostiocache", "on"]
 	vb.gui = true

    end
    config.vm.provision "shell", inline: <<-SHELL 		

    ############################################
    # BASIC INIT                            
    ############################################
    export VBOX_VERSION=#{ENV['VBOX_VERSION']};    		    
    export DEBIAN_FRONTEND=noninteractive
	
    # disable sudo-password for vagrant-user
    echo "vagrant ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers 
        
    apt update 
    apt install git -y
	
    rm -rf ./linux-setup
    git clone https://github.com/neocdtv/linux-setup.git
    cd linux-setup/dev-java
    chown vagrant:vagrant ./setup.sh
    chmod a+x ./setup.sh

    echo "Vagrantfile User: $USER"
    sudo -u $USER ./setup.sh
	
    apt install inotify-tools -y
    apt install tree -y

	
     # TODO: .bashrc
     # F1 - make all
     # F2 - make database
     # F3 - make build-app 
     # F4 - make run-app
     # F5 - make unit-tests

     # TODO:
     # add functions dump and restore using criu for payara-micro
     # vscode with launcher - dont use snap its slower

     SHELL
end
